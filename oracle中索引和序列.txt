关于索引和序列

一、 索引的概念

1、 类似书的目录结构

2、 Oracle 的“索引”对象，与表关联的可选对象，提高SQL查询语句的速度

3、 索引直接指向包含所查询值的行的位置，减少磁盘I/O

4、 与所索引的表是相互独立的物理结构

5、 Oracle 自动使用并维护索引，插入、删除、更新表后，自动更新索引

6、 语法：CREATE INDEX index ON table (column[, column]...);

7、 B-tree结构(非bitmap

二、 唯一索引

1、 何时创建：当某列任意两行的值都不相同

2、 当建立Primary Key(主键)或者Unique constraint(唯一约束)时，唯一索引将被自动建立

3、 语法：CREATE UNIQUE INDEX index ON table (column);

三、 组合索引

1、 何时创建：当两个或多个列经常一起出现在where条件中时，则在这些列上同时创建组合索引

2、 组合索引中列的顺序是任意的，也无需相邻。但是建议将最频繁访问的列放在列表的最前面

3、 演示(组合列，单独列)

四、 位图索引

1、 何时创建：

列中有非常多的重复的值时候。例如某列保存了 “性别”信息。

Where 条件中包含了很多OR操作符。

较少的update操作，因为要相应的跟新所有的bitmap

2、 结构：位图索引使用位图作为键值，对于表中的每一数据行位图包含了TRUE(1)、FALSE(0)、或NULL值。

3、 优点：位图以一种压缩格式存放，因此占用的磁盘空间比标准索引要小得多

4、 语法：CREATE BITMAP INDEX index ON table (column[, column]...);

五  基于函数的索引

   1、 何时创建：在WHERE条件语句中包含函数或者表达式时

2、 函数包括：算数表达式、PL/SQL函数、程序包函数、SQL函数、用户自定义函数。

3、 语法：CREATE INDEX index ON table (FUNCTION(column));

4、 演示

必须要分析表，并且 query_rewrite_enabled=TRUE

或者使用提示/*+ INDEX(ic_index)*/

管理索引的原则
1 小表一般不需要简历索引 ，1万以上
2 对于大表 如果经常查询的数据占不到15%，可以创建索引。
3 对于大部分列值不重复的列可以建立索引。
4．对于基数大的列，适合建立B树索引，而对于基数小的列适合建立位图索引。
5．对于列中有许多空值，但经常查询所有的非空值记录的列，应该建立索引。
6．LONG和LONG RAW列不能创建索引。
7．经常进行连接查询的列上应该创建索引。
8．在使用CREATE INDEX语句创建查询时，将最常查询的列放在其他列前面。
9．维护索引需要开销，特别时对表进行插入和删除操作时，因此要限制表中索引的数量。对于主要用于读的表，则索引多就有好处，但是，一个表如果经常被更改，则索引应少点。
10．在表中插入数据后创建索引。如果在装载数据之前创建了索引，那么当插入每行时，Oracle都必须更改每个索引。





序列 
必须是序列的拥有者或对序列有 ALTER 权限

l   只有将来的序列值会被改变

l   改变序列的初始值只能通过删除序列之后重建序列的方法实现
